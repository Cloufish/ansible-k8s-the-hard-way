---
- name: Render hostname.txt from inventory
  template:
    src: hostnames.j2
    dest: /home/{{ ansible_user }}/hostnames.txt

- name: Read contents of remote hosts file
  ansible.builtin.slurp:
    src: /home/{{ ansible_user }}/hostnames.txt
  register: slurped_hosts

- name: Append hosts content to /etc/hosts using blockinfile
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: "{{ slurped_hosts['content'] | b64decode }}"
    marker: "# {mark} Kubernetes The Hard Way"
  become: true

- name: Cleanup /home/{{ ansible_user }}/hostnames.txt
  file: 
    path: rm /home/{{ ansible_user }}/hostnames.txt
    state: absent

- name: Set server hostname
  ansible.builtin.hostname:
    name: server
  become: true
  when: inventory_hostname == groups['k8s_hard_server'][0]

- name: Set server hostname
  ansible.builtin.hostname:
    name: node-0
  become: true
  when: inventory_hostname == groups['k8s_hard_worker_nodes'][0]

- name: Set server hostname
  ansible.builtin.hostname:
    name: node-1
  become: true
  when: inventory_hostname == groups['k8s_hard_worker_nodes'][1]

- name: disable systemd-resolved service to prevent /etc/hosts being overwritten
  become: true
  systemd:
    name: systemd-resolved.service
    enabled: true
    state: started

- name: remove resolv.conf
  become: true
  file:
    path: /etc/resolv.conf
    state: absent

- name: Add DNS to resolv.conf that resolves /etc/hosts
  become: true
  ansible.builtin.template:
    src: resolv.conf
    dest: /etc/resolv.conf